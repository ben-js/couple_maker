"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/dashboard/activities";
exports.ids = ["pages/api/dashboard/activities"];
exports.modules = {

/***/ "@aws-sdk/client-dynamodb":
/*!*******************************************!*\
  !*** external "@aws-sdk/client-dynamodb" ***!
  \*******************************************/
/***/ ((module) => {

module.exports = require("@aws-sdk/client-dynamodb");

/***/ }),

/***/ "@aws-sdk/lib-dynamodb":
/*!****************************************!*\
  !*** external "@aws-sdk/lib-dynamodb" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@aws-sdk/lib-dynamodb");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdashboard%2Factivities&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cdashboard%5Cactivities.ts&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdashboard%2Factivities&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cdashboard%5Cactivities.ts&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_dashboard_activities_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src\\pages\\api\\dashboard\\activities.ts */ \"(api)/./src/pages/api/dashboard/activities.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_dashboard_activities_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_dashboard_activities_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/dashboard/activities\",\n        pathname: \"/api/dashboard/activities\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_dashboard_activities_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmRhc2hib2FyZCUyRmFjdGl2aXRpZXMmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZzcmMlNUNwYWdlcyU1Q2FwaSU1Q2Rhc2hib2FyZCU1Q2FjdGl2aXRpZXMudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDd0U7QUFDeEU7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLG1FQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxtRUFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYXRlLXNlbnNlLWFkbWluLz82NWRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmNcXFxccGFnZXNcXFxcYXBpXFxcXGRhc2hib2FyZFxcXFxhY3Rpdml0aWVzLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvZGFzaGJvYXJkL2FjdGl2aXRpZXNcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9kYXNoYm9hcmQvYWN0aXZpdGllc1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdashboard%2Factivities&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cdashboard%5Cactivities.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/config/aws.ts":
/*!***************************!*\
  !*** ./src/config/aws.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * AWS 공통 설정\n * @module config/aws\n * @description Admin에서 모든 AWS 서비스에서 공통으로 사용하는 설정\n */ const AWS_CONFIG = {\n    region: \"ap-northeast-2\",\n    credentials: {\n        accessKeyId: \"AKIAU2GJ5ZJPVVVU5C4W\",\n        secretAccessKey: \"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\"\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AWS_CONFIG);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvY29uZmlnL2F3cy50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Q0FJQyxHQUlELE1BQU1BLGFBQW1DO0lBQ3ZDQyxRQUFRO0lBQ1JDLGFBQWE7UUFDWEMsYUFBYTtRQUNiQyxpQkFBaUI7SUFDbkI7QUFDRjtBQUVBLGlFQUFlSixVQUFVQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGF0ZS1zZW5zZS1hZG1pbi8uL3NyYy9jb25maWcvYXdzLnRzPzVlNDMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBV1Mg6rO17Ya1IOyEpOyglVxuICogQG1vZHVsZSBjb25maWcvYXdzXG4gKiBAZGVzY3JpcHRpb24gQWRtaW7sl5DshJwg66qo65OgIEFXUyDshJzruYTsiqTsl5DshJwg6rO17Ya17Jy866GcIOyCrOyaqe2VmOuKlCDshKTsoJVcbiAqL1xuXG5pbXBvcnQgeyBEeW5hbW9EQkNsaWVudENvbmZpZyB9IGZyb20gJ0Bhd3Mtc2RrL2NsaWVudC1keW5hbW9kYic7XG5cbmNvbnN0IEFXU19DT05GSUc6IER5bmFtb0RCQ2xpZW50Q29uZmlnID0ge1xuICByZWdpb246ICdhcC1ub3J0aGVhc3QtMicsXG4gIGNyZWRlbnRpYWxzOiB7XG4gICAgYWNjZXNzS2V5SWQ6ICdBS0lBVTJHSjVaSlBWVlZVNUM0VycsXG4gICAgc2VjcmV0QWNjZXNzS2V5OiAnMmtUMy9nK01kdHloZ3NndlEzN1FGVnRFRTVKWWo2a0xOSWZyRExubicsXG4gIH0sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBBV1NfQ09ORklHOyAiXSwibmFtZXMiOlsiQVdTX0NPTkZJRyIsInJlZ2lvbiIsImNyZWRlbnRpYWxzIiwiYWNjZXNzS2V5SWQiLCJzZWNyZXRBY2Nlc3NLZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/config/aws.ts\n");

/***/ }),

/***/ "(api)/./src/lib/dataService.ts":
/*!********************************!*\
  !*** ./src/lib/dataService.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   deleteAllScoreHistory: () => (/* binding */ deleteAllScoreHistory),\n/* harmony export */   dynamodb: () => (/* binding */ dynamodb),\n/* harmony export */   getUserScore: () => (/* binding */ getUserScore),\n/* harmony export */   getUserScoreHistory: () => (/* binding */ getUserScoreHistory),\n/* harmony export */   saveUserScore: () => (/* binding */ saveUserScore)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/client-dynamodb */ \"@aws-sdk/client-dynamodb\");\n/* harmony import */ var _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/lib-dynamodb */ \"@aws-sdk/lib-dynamodb\");\n/* harmony import */ var _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _config_aws__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../config/aws */ \"(api)/./src/config/aws.ts\");\n\n\n\n// AWS 설정\nconst client = new _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_0__.DynamoDBClient(_config_aws__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\nconst dynamodb = _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.DynamoDBDocumentClient.from(client);\n// DynamoDB 클라이언트를 export하여 다른 모듈에서 사용할 수 있도록 함\n\nclass DataService {\n    // 매니저 계정 관련 메서드\n    async getManagerByEmail(email) {\n        const params = {\n            TableName: \"Managers\",\n            IndexName: \"EmailIndex\",\n            KeyConditionExpression: \"email = :email\",\n            ExpressionAttributeValues: {\n                \":email\": email\n            }\n        };\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.QueryCommand(params));\n            return result.Items?.[0] || null;\n        } catch (error) {\n            console.error(\"매니저 계정 조회 오류:\", error);\n            throw error;\n        }\n    }\n    async getManagerById(managerId) {\n        const params = {\n            TableName: \"Managers\",\n            Key: {\n                id: managerId\n            }\n        };\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.GetCommand(params));\n            return result.Item || null;\n        } catch (error) {\n            console.error(\"매니저 계정 조회 오류:\", error);\n            throw error;\n        }\n    }\n    // 일반 사용자 관련 메서드 (기존 Users 테이블 사용)\n    async getUsers() {\n        const params = {\n            TableName: \"Users\"\n        };\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand(params));\n            return result.Items || [];\n        } catch (error) {\n            console.error(\"사용자 조회 오류:\", error);\n            throw error;\n        }\n    }\n    async getUserById(userId) {\n        console.log(\"DataService.getUserById 호출됨, userId:\", userId);\n        const params = {\n            TableName: \"Users\",\n            Key: {\n                user_id: userId\n            }\n        };\n        console.log(\"DynamoDB 파라미터:\", params);\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.GetCommand(params));\n            console.log(\"DynamoDB 응답:\", result);\n            console.log(\"조회된 사용자:\", result.Item);\n            return result.Item || null;\n        } catch (error) {\n            console.error(\"사용자 조회 오류:\", error);\n            throw error;\n        }\n    }\n    async getProfile(userId) {\n        console.log(\"DataService.getProfile 호출됨, userId:\", userId);\n        const params = {\n            TableName: \"Profiles\",\n            Key: {\n                user_id: userId\n            }\n        };\n        console.log(\"프로필 조회 파라미터:\", params);\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.GetCommand(params));\n            console.log(\"프로필 조회 결과:\", result.Item);\n            return result.Item || null;\n        } catch (error) {\n            console.error(\"프로필 조회 오류:\", error);\n            // 프로필이 없어도 오류로 처리하지 않음\n            return null;\n        }\n    }\n    async getPreferences(userId) {\n        console.log(\"DataService.getPreferences 호출됨, userId:\", userId);\n        const params = {\n            TableName: \"Preferences\",\n            Key: {\n                user_id: userId\n            }\n        };\n        console.log(\"선호도 조회 파라미터:\", params);\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.GetCommand(params));\n            console.log(\"선호도 조회 결과:\", result.Item);\n            return result.Item || null;\n        } catch (error) {\n            console.error(\"선호도 조회 오류:\", error);\n            // 선호도가 없어도 오류로 처리하지 않음\n            return null;\n        }\n    }\n    async updateUserStatus(userId, status, reason) {\n        const params = {\n            TableName: \"Users\",\n            Key: {\n                user_id: userId\n            },\n            UpdateExpression: \"SET #status = :status, updated_at = :updatedAt\",\n            ExpressionAttributeNames: {\n                \"#status\": \"status\"\n            },\n            ExpressionAttributeValues: {\n                \":status\": status,\n                \":updatedAt\": new Date().toISOString()\n            },\n            ReturnValues: \"ALL_NEW\"\n        };\n        if (reason) {\n            params.UpdateExpression += \", delete_reason = :reason\";\n            params.ExpressionAttributeValues[\":reason\"] = reason;\n        }\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.UpdateCommand(params));\n            return result.Attributes || null;\n        } catch (error) {\n            console.error(\"사용자 상태 업데이트 오류:\", error);\n            throw error;\n        }\n    }\n    async updateUserGrade(userId, grade) {\n        const params = {\n            TableName: \"Users\",\n            Key: {\n                user_id: userId\n            },\n            UpdateExpression: \"SET grade = :grade, updated_at = :updatedAt\",\n            ExpressionAttributeValues: {\n                \":grade\": grade,\n                \":updatedAt\": new Date().toISOString()\n            },\n            ReturnValues: \"ALL_NEW\"\n        };\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.UpdateCommand(params));\n            return result.Attributes || null;\n        } catch (error) {\n            console.error(\"사용자 등급 업데이트 오류:\", error);\n            throw error;\n        }\n    }\n    // 매칭 관련 메서드\n    async getMatchingRequests(status) {\n        const params = {\n            TableName: \"MatchingRequests\"\n        };\n        if (status) {\n            params.FilterExpression = \"#status = :status\";\n            params.ExpressionAttributeNames = {\n                \"#status\": \"status\"\n            };\n            params.ExpressionAttributeValues = {\n                \":status\": status\n            };\n        }\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand(params));\n            return result.Items || [];\n        } catch (error) {\n            console.error(\"매칭 요청 조회 오류:\", error);\n            throw error;\n        }\n    }\n    async getProposals(status) {\n        const params = {\n            TableName: \"Proposals\"\n        };\n        if (status) {\n            params.FilterExpression = \"#status = :status\";\n            params.ExpressionAttributeNames = {\n                \"#status\": \"status\"\n            };\n            params.ExpressionAttributeValues = {\n                \":status\": status\n            };\n        }\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand(params));\n            return result.Items || [];\n        } catch (error) {\n            console.error(\"제안 조회 오류:\", error);\n            throw error;\n        }\n    }\n    async getMatchPairs() {\n        const params = {\n            TableName: \"MatchPairs\"\n        };\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand(params));\n            return result.Items || [];\n        } catch (error) {\n            console.error(\"매칭 페어 조회 오류:\", error);\n            throw error;\n        }\n    }\n    async getMatchingHistory() {\n        const params = {\n            TableName: \"MatchingHistory\"\n        };\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand(params));\n            return result.Items || [];\n        } catch (error) {\n            console.error(\"매칭 이력 조회 오류:\", error);\n            throw error;\n        }\n    }\n    async getReviews() {\n        const params = {\n            TableName: \"Reviews\"\n        };\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand(params));\n            return result.Items || [];\n        } catch (error) {\n            console.error(\"리뷰 조회 오류:\", error);\n            throw error;\n        }\n    }\n    // 포인트 관련 메서드\n    async getPointHistory(userId) {\n        const params = {\n            TableName: \"PointHistory\"\n        };\n        if (userId) {\n            params.KeyConditionExpression = \"user_id = :userId\";\n            params.ExpressionAttributeValues = {\n                \":userId\": userId\n            };\n            params.ScanIndexForward = false; // 최신순\n        }\n        try {\n            const result = userId ? await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.QueryCommand(params)) : await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand(params));\n            return result.Items || [];\n        } catch (error) {\n            console.error(\"포인트 내역 조회 오류:\", error);\n            throw error;\n        }\n    }\n    // 사용자 상태 이력 관련 메서드\n    async getUserStatusHistory(userId) {\n        const params = {\n            TableName: \"UserStatusHistory\"\n        };\n        if (userId) {\n            params.KeyConditionExpression = \"user_id = :userId\";\n            params.ExpressionAttributeValues = {\n                \":userId\": userId\n            };\n            params.ScanIndexForward = false; // 최신순\n        }\n        try {\n            const result = userId ? await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.QueryCommand(params)) : await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand(params));\n            return result.Items || [];\n        } catch (error) {\n            console.error(\"사용자 상태 이력 조회 오류:\", error);\n            throw error;\n        }\n    }\n    // 매니저 로그 관련 메서드\n    async logManagerAction(managerId, actionType, targetId, details) {\n        const params = {\n            TableName: \"ManagerLogs\",\n            Item: {\n                id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n                timestamp: new Date().toISOString(),\n                managerId: managerId,\n                action: actionType,\n                targetId: targetId,\n                details: details\n            }\n        };\n        try {\n            await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.PutCommand(params));\n            console.log(\"✅ 매니저 로그 저장 완료:\", params.Item);\n        } catch (error) {\n            console.error(\"매니저 액션 로그 저장 오류:\", error);\n            throw error;\n        }\n    }\n    async getManagerLogs(limit = 50, managerId, action) {\n        const params = {\n            TableName: \"ManagerLogs\",\n            Limit: limit\n        };\n        if (managerId || action) {\n            params.FilterExpression = [];\n            params.ExpressionAttributeValues = {};\n            if (managerId) {\n                params.FilterExpression.push(\"managerId = :managerId\");\n                params.ExpressionAttributeValues[\":managerId\"] = managerId;\n            }\n            if (action) {\n                params.FilterExpression.push(\"action = :action\");\n                params.ExpressionAttributeValues[\":action\"] = action;\n            }\n            params.FilterExpression = params.FilterExpression.join(\" AND \");\n        }\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand(params));\n            const logs = result.Items || [];\n            // 실제 테이블 스키마에 맞게 변환\n            const convertedLogs = logs.map((log)=>({\n                    id: log.id,\n                    manager_id: log.managerId,\n                    action_type: log.action,\n                    target_id: log.targetId,\n                    details: log.details,\n                    created_at: log.timestamp\n                }));\n            return convertedLogs.sort((a, b)=>new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n        } catch (error) {\n            console.error(\"매니저 로그 조회 오류:\", error);\n            throw error;\n        }\n    }\n    // 유틸리티 메서드\n    getTargetType(targetId) {\n        if (targetId.startsWith(\"user_\")) return \"user\";\n        if (targetId.startsWith(\"match_\")) return \"match\";\n        return \"unknown\";\n    }\n    // 대시보드 통계 메서드\n    async getDashboardStats() {\n        try {\n            const [users, matches, points] = await Promise.all([\n                this.getUsers(),\n                this.getMatchingHistory(),\n                this.getPointHistory()\n            ]);\n            const totalUsers = users.length;\n            const activeUsers = users.filter((user)=>user.status === \"active\" || user.status === \"green\").length;\n            const totalMatches = matches.length;\n            const totalPoints = points.reduce((sum, point)=>sum + point.amount, 0);\n            const totalRevenue = points.filter((point)=>point.type === \"charge\" || point.amount > 0).reduce((sum, point)=>sum + Math.abs(point.amount), 0);\n            return {\n                totalUsers,\n                activeUsers,\n                totalMatches,\n                totalPoints,\n                totalRevenue\n            };\n        } catch (error) {\n            console.error(\"대시보드 통계 조회 오류:\", error);\n            throw error;\n        }\n    }\n    // 최근 활동 메서드\n    async getRecentActivities(limit = 10) {\n        try {\n            const [users, matches, points] = await Promise.all([\n                this.getUsers(),\n                this.getMatchingHistory(),\n                this.getPointHistory()\n            ]);\n            const activities = [];\n            // 최근 가입한 사용자들\n            const recentUsers = users.sort((a, b)=>new Date(b.created_at).getTime() - new Date(a.created_at).getTime()).slice(0, 3);\n            recentUsers.forEach((user)=>{\n                activities.push({\n                    id: user.user_id,\n                    type: \"user_signup\",\n                    description: `새로운 사용자가 가입했습니다: ${user.email}`,\n                    timestamp: user.created_at,\n                    user: user.email\n                });\n            });\n            // 최근 매칭 활동\n            const recentMatches = matches.sort((a, b)=>new Date(b.created_at).getTime() - new Date(a.created_at).getTime()).slice(0, 3);\n            recentMatches.forEach((match)=>{\n                activities.push({\n                    id: match.id,\n                    type: \"matching\",\n                    description: `새로운 매칭이 생성되었습니다: ${match.user1_id} ↔ ${match.user2_id}`,\n                    timestamp: match.created_at,\n                    user: `${match.user1_id}, ${match.user2_id}`\n                });\n            });\n            // 최근 포인트 거래\n            const recentPoints = points.sort((a, b)=>new Date(b.created_at).getTime() - new Date(a.created_at).getTime()).slice(0, 3);\n            recentPoints.forEach((point)=>{\n                activities.push({\n                    id: point.id,\n                    type: \"point_transaction\",\n                    description: `포인트 거래: ${point.amount > 0 ? \"+\" : \"\"}${point.amount}P (${point.type})`,\n                    timestamp: point.created_at,\n                    user: point.user_id\n                });\n            });\n            // 모든 활동을 시간순으로 정렬하고 최근 limit개만 반환\n            return activities.sort((a, b)=>new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()).slice(0, limit);\n        } catch (error) {\n            console.error(\"최근 활동 조회 오류:\", error);\n            throw error;\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DataService);\n// Scores 테이블 연동 함수\nasync function saveUserScore(userId, score, scorer, summary = \"\") {\n    const now = new Date().toISOString();\n    // 기존 점수 row 모두 삭제 (user_id로 Query)\n    const existing = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.QueryCommand({\n        TableName: \"Scores\",\n        KeyConditionExpression: \"user_id = :uid\",\n        ExpressionAttributeValues: {\n            \":uid\": userId\n        }\n    }));\n    for (const item of existing.Items || []){\n        await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.DeleteCommand({\n            TableName: \"Scores\",\n            Key: {\n                user_id: item.user_id,\n                created_at: item.created_at\n            }\n        }));\n    }\n    // Scores 테이블: user_id + created_at(=now)로 저장\n    const item = {\n        user_id: userId,\n        created_at: now,\n        scorer,\n        ...score,\n        updated_at: now\n    };\n    await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.PutCommand({\n        TableName: \"Scores\",\n        Item: item\n    }));\n    // Users 테이블에 has_score: true 업데이트\n    await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.UpdateCommand({\n        TableName: \"Users\",\n        Key: {\n            user_id: userId\n        },\n        UpdateExpression: \"SET has_score = :true, updated_at = :updatedAt\",\n        ExpressionAttributeValues: {\n            \":true\": true,\n            \":updatedAt\": now\n        }\n    }));\n    // 점수 저장 전 평균/등급 계산\n    const average = score.appearance * 0.25 + score.personality * 0.25 + score.job * 0.2 + score.education * 0.15 + score.economics * 0.15;\n    function getGrade(score) {\n        if (score >= 95) return \"S\";\n        if (score >= 85) return \"A\";\n        if (score >= 75) return \"B\";\n        if (score >= 65) return \"C\";\n        if (score >= 55) return \"D\";\n        if (score >= 45) return \"E\";\n        return \"F\";\n    }\n    const averageGrade = getGrade(average);\n    // ScoreHistory 테이블에 이력 저장 (평탄화 구조)\n    await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.PutCommand({\n        TableName: \"ScoreHistory\",\n        Item: {\n            user_id: userId,\n            created_at: now,\n            face_score: score.faceScore,\n            appearance: score.appearance,\n            personality: score.personality,\n            job: score.job,\n            education: score.education,\n            economics: score.economics,\n            average,\n            averageGrade,\n            reason: summary,\n            manager_id: scorer\n        }\n    }));\n    // UserStatusHistory에는 점수 이력 저장하지 않음\n    return item;\n}\nasync function getUserScoreHistory(userId) {\n    const params = {\n        TableName: \"UserStatusHistory\",\n        KeyConditionExpression: \"user_id = :uid\",\n        ExpressionAttributeValues: {\n            \":uid\": userId\n        },\n        ScanIndexForward: false\n    };\n    const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.QueryCommand(params));\n    // type이 'score'인 이력만 반환\n    return (result.Items || []).filter((item)=>item.type === \"score\");\n}\nasync function deleteAllScoreHistory(userId) {\n    // 해당 user_id의 모든 ScoreHistory row 삭제\n    const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.QueryCommand({\n        TableName: \"ScoreHistory\",\n        KeyConditionExpression: \"user_id = :uid\",\n        ExpressionAttributeValues: {\n            \":uid\": userId\n        }\n    }));\n    for (const item of result.Items || []){\n        await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.DeleteCommand({\n            TableName: \"ScoreHistory\",\n            Key: {\n                user_id: item.user_id,\n                created_at: item.created_at\n            }\n        }));\n    }\n}\nasync function getUserScore(userId) {\n    const params = {\n        TableName: \"Scores\",\n        KeyConditionExpression: \"user_id = :uid\",\n        ExpressionAttributeValues: {\n            \":uid\": userId\n        },\n        ScanIndexForward: false,\n        Limit: 1\n    };\n    const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.QueryCommand(params));\n    return result.Items?.[0] || null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/lib/dataService.ts\n");

/***/ }),

/***/ "(api)/./src/pages/api/dashboard/activities.ts":
/*!***********************************************!*\
  !*** ./src/pages/api/dashboard/activities.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_dataService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../lib/dataService */ \"(api)/./src/lib/dataService.ts\");\n\nconst dataService = new _lib_dataService__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\nasync function handler(req, res) {\n    if (req.method !== \"GET\") {\n        return res.status(405).json({\n            message: \"Method not allowed\"\n        });\n    }\n    try {\n        // 개발 환경에서는 토큰 검증 완화\n        if (false) {}\n        console.log(\"최근 활동 데이터 조회 시작\");\n        // DataService를 사용하여 최근 활동 조회\n        const activities = await dataService.getRecentActivities(10);\n        console.log(\"최근 활동 데이터:\", activities.length, \"개\");\n        res.status(200).json(activities);\n    } catch (error) {\n        console.error(\"최근 활동 조회 오류:\", error);\n        res.status(500).json({\n            message: \"최근 활동 조회 중 오류가 발생했습니다.\",\n            error: error instanceof Error ? error.message : \"Unknown error\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL2Rhc2hib2FyZC9hY3Rpdml0aWVzLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQ21EO0FBRW5ELE1BQU1DLGNBQWMsSUFBSUQsd0RBQVdBO0FBVXBCLGVBQWVFLFFBQzVCQyxHQUFtQixFQUNuQkMsR0FBNEU7SUFFNUUsSUFBSUQsSUFBSUUsTUFBTSxLQUFLLE9BQU87UUFDeEIsT0FBT0QsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUFFQyxTQUFTO1FBQXFCO0lBQzlEO0lBRUEsSUFBSTtRQUNGLG9CQUFvQjtRQUNwQixJQUFJQyxLQUF5QixFQUFjLEVBSzFDO1FBRURLLFFBQVFDLEdBQUcsQ0FBQztRQUVaLDZCQUE2QjtRQUM3QixNQUFNQyxhQUFhLE1BQU1mLFlBQVlnQixtQkFBbUIsQ0FBQztRQUV6REgsUUFBUUMsR0FBRyxDQUFDLGNBQWNDLFdBQVdFLE1BQU0sRUFBRTtRQUU3Q2QsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQ1M7SUFDdkIsRUFBRSxPQUFPRyxPQUFPO1FBQ2RMLFFBQVFLLEtBQUssQ0FBQyxnQkFBZ0JBO1FBQzlCZixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQ25CQyxTQUFTO1lBQ1RXLE9BQU9BLGlCQUFpQkMsUUFBUUQsTUFBTVgsT0FBTyxHQUFHO1FBQ2xEO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhdGUtc2Vuc2UtYWRtaW4vLi9zcmMvcGFnZXMvYXBpL2Rhc2hib2FyZC9hY3Rpdml0aWVzLnRzP2E5NjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dEFwaVJlcXVlc3QsIE5leHRBcGlSZXNwb25zZSB9IGZyb20gJ25leHQnO1xyXG5pbXBvcnQgRGF0YVNlcnZpY2UgZnJvbSAnLi4vLi4vLi4vbGliL2RhdGFTZXJ2aWNlJztcclxuXHJcbmNvbnN0IGRhdGFTZXJ2aWNlID0gbmV3IERhdGFTZXJ2aWNlKCk7XHJcblxyXG5pbnRlcmZhY2UgUmVjZW50QWN0aXZpdHkge1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgdHlwZTogc3RyaW5nO1xyXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmc7XHJcbiAgdGltZXN0YW1wOiBzdHJpbmc7XHJcbiAgdXNlcj86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihcclxuICByZXE6IE5leHRBcGlSZXF1ZXN0LFxyXG4gIHJlczogTmV4dEFwaVJlc3BvbnNlPFJlY2VudEFjdGl2aXR5W10gfCB7IG1lc3NhZ2U6IHN0cmluZzsgZXJyb3I/OiBzdHJpbmcgfT5cclxuKSB7XHJcbiAgaWYgKHJlcS5tZXRob2QgIT09ICdHRVQnKSB7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDUpLmpzb24oeyBtZXNzYWdlOiAnTWV0aG9kIG5vdCBhbGxvd2VkJyB9KTtcclxuICB9XHJcblxyXG4gIHRyeSB7XHJcbiAgICAvLyDqsJzrsJwg7ZmY6rK97JeQ7ISc64qUIO2GoO2BsCDqsoDspp0g7JmE7ZmUXHJcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xyXG4gICAgICBjb25zdCBhdXRoSGVhZGVyID0gcmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbjtcclxuICAgICAgaWYgKCFhdXRoSGVhZGVyIHx8ICFhdXRoSGVhZGVyLnN0YXJ0c1dpdGgoJ0JlYXJlciAnKSkge1xyXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1lc3NhZ2U6ICdVbmF1dGhvcml6ZWQnIH0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY29uc29sZS5sb2coJ+y1nOq3vCDtmZzrj5kg642w7J207YSwIOyhsO2ajCDsi5zsnpEnKTtcclxuXHJcbiAgICAvLyBEYXRhU2VydmljZeulvCDsgqzsmqntlZjsl6wg7LWc6re8IO2ZnOuPmSDsobDtmoxcclxuICAgIGNvbnN0IGFjdGl2aXRpZXMgPSBhd2FpdCBkYXRhU2VydmljZS5nZXRSZWNlbnRBY3Rpdml0aWVzKDEwKTtcclxuXHJcbiAgICBjb25zb2xlLmxvZygn7LWc6re8IO2ZnOuPmSDrjbDsnbTthLA6JywgYWN0aXZpdGllcy5sZW5ndGgsICfqsJwnKTtcclxuXHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbihhY3Rpdml0aWVzKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcign7LWc6re8IO2ZnOuPmSDsobDtmowg7Jik66WYOicsIGVycm9yKTtcclxuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgXHJcbiAgICAgIG1lc3NhZ2U6ICfstZzqt7wg7Zmc64+ZIOyhsO2ajCDspJEg7Jik66WY6rCAIOuwnOyDne2WiOyKteuLiOuLpC4nLFxyXG4gICAgICBlcnJvcjogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvcidcclxuICAgIH0pO1xyXG4gIH1cclxufSAiXSwibmFtZXMiOlsiRGF0YVNlcnZpY2UiLCJkYXRhU2VydmljZSIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZSIsInByb2Nlc3MiLCJhdXRoSGVhZGVyIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJzdGFydHNXaXRoIiwiY29uc29sZSIsImxvZyIsImFjdGl2aXRpZXMiLCJnZXRSZWNlbnRBY3Rpdml0aWVzIiwibGVuZ3RoIiwiZXJyb3IiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/dashboard/activities.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdashboard%2Factivities&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cdashboard%5Cactivities.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();
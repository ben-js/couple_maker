"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/admin/managers/[managerId]";
exports.ids = ["pages/api/admin/managers/[managerId]"];
exports.modules = {

/***/ "@aws-sdk/client-dynamodb":
/*!*******************************************!*\
  !*** external "@aws-sdk/client-dynamodb" ***!
  \*******************************************/
/***/ ((module) => {

module.exports = require("@aws-sdk/client-dynamodb");

/***/ }),

/***/ "@aws-sdk/lib-dynamodb":
/*!****************************************!*\
  !*** external "@aws-sdk/lib-dynamodb" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@aws-sdk/lib-dynamodb");

/***/ }),

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("jsonwebtoken");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Fmanagers%2F%5BmanagerId%5D&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cadmin%5Cmanagers%5C%5BmanagerId%5D.ts&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Fmanagers%2F%5BmanagerId%5D&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cadmin%5Cmanagers%5C%5BmanagerId%5D.ts&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_admin_managers_managerId_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src\\pages\\api\\admin\\managers\\[managerId].ts */ \"(api)/./src/pages/api/admin/managers/[managerId].ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_admin_managers_managerId_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_admin_managers_managerId_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/admin/managers/[managerId]\",\n        pathname: \"/api/admin/managers/[managerId]\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_admin_managers_managerId_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmFkbWluJTJGbWFuYWdlcnMlMkYlNUJtYW5hZ2VySWQlNUQmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZzcmMlNUNwYWdlcyU1Q2FwaSU1Q2FkbWluJTVDbWFuYWdlcnMlNUMlNUJtYW5hZ2VySWQlNUQudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDK0U7QUFDL0U7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHVFQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyx1RUFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYXRlLXNlbnNlLWFkbWluLz81MjZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmNcXFxccGFnZXNcXFxcYXBpXFxcXGFkbWluXFxcXG1hbmFnZXJzXFxcXFttYW5hZ2VySWRdLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYWRtaW4vbWFuYWdlcnMvW21hbmFnZXJJZF1cIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9hZG1pbi9tYW5hZ2Vycy9bbWFuYWdlcklkXVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Fmanagers%2F%5BmanagerId%5D&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cadmin%5Cmanagers%5C%5BmanagerId%5D.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/config/aws.ts":
/*!***************************!*\
  !*** ./src/config/aws.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   awsConfig: () => (/* binding */ awsConfig)\n/* harmony export */ });\n/**\n * AWS 공통 설정\n * @module config/aws\n * @description Admin에서 모든 AWS 서비스에서 공통으로 사용하는 설정\n */ const awsConfig = {\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,\n    region: process.env.AWS_REGION\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvY29uZmlnL2F3cy50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Q0FJQyxHQUNNLE1BQU1BLFlBQVk7SUFDdkJDLGFBQWFDLFFBQVFDLEdBQUcsQ0FBQ0MsaUJBQWlCO0lBQzFDQyxpQkFBaUJILFFBQVFDLEdBQUcsQ0FBQ0cscUJBQXFCO0lBQ2xEQyxRQUFRTCxRQUFRQyxHQUFHLENBQUNLLFVBQVU7QUFDaEMsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhdGUtc2Vuc2UtYWRtaW4vLi9zcmMvY29uZmlnL2F3cy50cz81ZTQzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQVdTIOqzte2GtSDshKTsoJVcbiAqIEBtb2R1bGUgY29uZmlnL2F3c1xuICogQGRlc2NyaXB0aW9uIEFkbWlu7JeQ7IScIOuqqOuToCBBV1Mg7ISc67mE7Iqk7JeQ7IScIOqzte2GteycvOuhnCDsgqzsmqntlZjripQg7ISk7KCVXG4gKi9cbmV4cG9ydCBjb25zdCBhd3NDb25maWcgPSB7XG4gIGFjY2Vzc0tleUlkOiBwcm9jZXNzLmVudi5BV1NfQUNDRVNTX0tFWV9JRCxcbiAgc2VjcmV0QWNjZXNzS2V5OiBwcm9jZXNzLmVudi5BV1NfU0VDUkVUX0FDQ0VTU19LRVksXG4gIHJlZ2lvbjogcHJvY2Vzcy5lbnYuQVdTX1JFR0lPTixcbn07ICJdLCJuYW1lcyI6WyJhd3NDb25maWciLCJhY2Nlc3NLZXlJZCIsInByb2Nlc3MiLCJlbnYiLCJBV1NfQUNDRVNTX0tFWV9JRCIsInNlY3JldEFjY2Vzc0tleSIsIkFXU19TRUNSRVRfQUNDRVNTX0tFWSIsInJlZ2lvbiIsIkFXU19SRUdJT04iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/config/aws.ts\n");

/***/ }),

/***/ "(api)/./src/lib/dataService.ts":
/*!********************************!*\
  !*** ./src/lib/dataService.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   deleteAllScoreHistory: () => (/* binding */ deleteAllScoreHistory),\n/* harmony export */   dynamodb: () => (/* binding */ dynamodb),\n/* harmony export */   getUserScore: () => (/* binding */ getUserScore),\n/* harmony export */   getUserScoreHistory: () => (/* binding */ getUserScoreHistory),\n/* harmony export */   saveUserScore: () => (/* binding */ saveUserScore)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/client-dynamodb */ \"@aws-sdk/client-dynamodb\");\n/* harmony import */ var _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/lib-dynamodb */ \"@aws-sdk/lib-dynamodb\");\n/* harmony import */ var _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _config_aws__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../config/aws */ \"(api)/./src/config/aws.ts\");\n\n\n\n// AWS 설정\nconst client = new _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_0__.DynamoDBClient(_config_aws__WEBPACK_IMPORTED_MODULE_2__.awsConfig);\nconst dynamodb = _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.DynamoDBDocumentClient.from(client);\n// DynamoDB 클라이언트를 export하여 다른 모듈에서 사용할 수 있도록 함\n\nclass DataService {\n    // 매니저 계정 관련 메서드\n    async getManagerByEmail(email) {\n        const params = {\n            TableName: \"Managers\",\n            IndexName: \"EmailIndex\",\n            KeyConditionExpression: \"email = :email\",\n            ExpressionAttributeValues: {\n                \":email\": email\n            }\n        };\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.QueryCommand(params));\n            return result.Items?.[0] || null;\n        } catch (error) {\n            throw error;\n        }\n    }\n    async getManagerById(managerId) {\n        const params = {\n            TableName: \"Managers\",\n            Key: {\n                id: managerId\n            }\n        };\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.GetCommand(params));\n            return result.Item || null;\n        } catch (error) {\n            throw error;\n        }\n    }\n    // 일반 사용자 관련 메서드 (기존 Users 테이블 사용)\n    async getUsers() {\n        const params = {\n            TableName: \"Users\"\n        };\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand(params));\n            return result.Items || [];\n        } catch (error) {\n            throw error;\n        }\n    }\n    async getUserById(userId) {\n        const params = {\n            TableName: \"Users\",\n            Key: {\n                user_id: userId\n            }\n        };\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.GetCommand(params));\n            return result.Item || null;\n        } catch (error) {\n            throw error;\n        }\n    }\n    async getProfile(userId) {\n        const params = {\n            TableName: \"Profiles\",\n            Key: {\n                user_id: userId\n            }\n        };\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.GetCommand(params));\n            return result.Item || null;\n        } catch (error) {\n            // 프로필이 없어도 오류로 처리하지 않음\n            return null;\n        }\n    }\n    async getPreferences(userId) {\n        const params = {\n            TableName: \"Preferences\",\n            Key: {\n                user_id: userId\n            }\n        };\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.GetCommand(params));\n            return result.Item || null;\n        } catch (error) {\n            // 선호도가 없어도 오류로 처리하지 않음\n            return null;\n        }\n    }\n    async updateUserStatus(userId, status, reason) {\n        const params = {\n            TableName: \"Users\",\n            Key: {\n                user_id: userId\n            },\n            UpdateExpression: \"SET #status = :status, updated_at = :updatedAt\",\n            ExpressionAttributeNames: {\n                \"#status\": \"status\"\n            },\n            ExpressionAttributeValues: {\n                \":status\": status,\n                \":updatedAt\": new Date().toISOString()\n            },\n            ReturnValues: \"ALL_NEW\"\n        };\n        if (reason) {\n            params.UpdateExpression += \", delete_reason = :reason\";\n            params.ExpressionAttributeValues[\":reason\"] = reason;\n        }\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.UpdateCommand(params));\n            return result.Attributes || null;\n        } catch (error) {\n            throw error;\n        }\n    }\n    async updateUserGrade(userId, grade) {\n        const params = {\n            TableName: \"Users\",\n            Key: {\n                user_id: userId\n            },\n            UpdateExpression: \"SET grade = :grade, updated_at = :updatedAt\",\n            ExpressionAttributeValues: {\n                \":grade\": grade,\n                \":updatedAt\": new Date().toISOString()\n            },\n            ReturnValues: \"ALL_NEW\"\n        };\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.UpdateCommand(params));\n            return result.Attributes || null;\n        } catch (error) {\n            throw error;\n        }\n    }\n    // 매칭 관련 메서드\n    async getMatchingRequests(status) {\n        const params = {\n            TableName: \"MatchingRequests\"\n        };\n        if (status) {\n            params.FilterExpression = \"#status = :status\";\n            params.ExpressionAttributeNames = {\n                \"#status\": \"status\"\n            };\n            params.ExpressionAttributeValues = {\n                \":status\": status\n            };\n        }\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand(params));\n            return result.Items || [];\n        } catch (error) {\n            throw error;\n        }\n    }\n    async getProposals(status) {\n        const params = {\n            TableName: \"Proposals\"\n        };\n        if (status) {\n            params.FilterExpression = \"#status = :status\";\n            params.ExpressionAttributeNames = {\n                \"#status\": \"status\"\n            };\n            params.ExpressionAttributeValues = {\n                \":status\": status\n            };\n        }\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand(params));\n            return result.Items || [];\n        } catch (error) {\n            throw error;\n        }\n    }\n    async getMatchPairs() {\n        const params = {\n            TableName: \"MatchPairs\"\n        };\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand(params));\n            return result.Items || [];\n        } catch (error) {\n            throw error;\n        }\n    }\n    async getMatchingHistory() {\n        const params = {\n            TableName: \"MatchingHistory\"\n        };\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand(params));\n            return result.Items || [];\n        } catch (error) {\n            throw error;\n        }\n    }\n    async getReviews() {\n        const params = {\n            TableName: \"Reviews\"\n        };\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand(params));\n            return result.Items || [];\n        } catch (error) {\n            throw error;\n        }\n    }\n    // 포인트 관련 메서드\n    async getPointHistory(userId) {\n        const params = {\n            TableName: \"PointHistory\"\n        };\n        if (userId) {\n            params.KeyConditionExpression = \"user_id = :userId\";\n            params.ExpressionAttributeValues = {\n                \":userId\": userId\n            };\n            params.ScanIndexForward = false; // 최신순\n        }\n        try {\n            const result = userId ? await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.QueryCommand(params)) : await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand(params));\n            return result.Items || [];\n        } catch (error) {\n            throw error;\n        }\n    }\n    // 사용자 상태 이력 관련 메서드\n    async getUserStatusHistory(userId) {\n        const params = {\n            TableName: \"UserStatusHistory\"\n        };\n        if (userId) {\n            params.KeyConditionExpression = \"user_id = :userId\";\n            params.ExpressionAttributeValues = {\n                \":userId\": userId\n            };\n            params.ScanIndexForward = false; // 최신순\n        }\n        try {\n            const result = userId ? await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.QueryCommand(params)) : await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand(params));\n            return result.Items || [];\n        } catch (error) {\n            throw error;\n        }\n    }\n    // 매니저 로그 관련 메서드\n    async logManagerAction(managerId, actionType, targetId, details) {\n        const params = {\n            TableName: \"ManagerLogs\",\n            Item: {\n                id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n                timestamp: new Date().toISOString(),\n                managerId: managerId,\n                action: actionType,\n                targetId: targetId,\n                details: details\n            }\n        };\n        try {\n            await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.PutCommand(params));\n        } catch (error) {\n            throw error;\n        }\n    }\n    async getManagerLogs(limit = 50, managerId, action) {\n        const params = {\n            TableName: \"ManagerLogs\",\n            Limit: limit\n        };\n        if (managerId || action) {\n            params.FilterExpression = [];\n            params.ExpressionAttributeValues = {};\n            if (managerId) {\n                params.FilterExpression.push(\"managerId = :managerId\");\n                params.ExpressionAttributeValues[\":managerId\"] = managerId;\n            }\n            if (action) {\n                params.FilterExpression.push(\"action = :action\");\n                params.ExpressionAttributeValues[\":action\"] = action;\n            }\n            params.FilterExpression = params.FilterExpression.join(\" AND \");\n        }\n        try {\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand(params));\n            const logs = result.Items || [];\n            // 실제 테이블 스키마에 맞게 변환\n            const convertedLogs = logs.map((log)=>({\n                    id: log.id,\n                    manager_id: log.managerId,\n                    action_type: log.action,\n                    target_id: log.targetId,\n                    details: log.details,\n                    created_at: log.timestamp\n                }));\n            return convertedLogs.sort((a, b)=>new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n        } catch (error) {\n            throw error;\n        }\n    }\n    // 유틸리티 메서드\n    getTargetType(targetId) {\n        if (targetId.startsWith(\"user_\")) return \"user\";\n        if (targetId.startsWith(\"match_\")) return \"match\";\n        return \"unknown\";\n    }\n    // 대시보드 통계 메서드\n    async getDashboardStats() {\n        try {\n            const [users, matches, points] = await Promise.all([\n                this.getUsers(),\n                this.getMatchingHistory(),\n                this.getPointHistory()\n            ]);\n            const totalUsers = users.length;\n            const activeUsers = users.filter((user)=>user.status === \"active\" || user.status === \"green\").length;\n            const totalMatches = matches.length;\n            const totalPoints = points.reduce((sum, point)=>sum + point.amount, 0);\n            const totalRevenue = points.filter((point)=>point.type === \"charge\" || point.amount > 0).reduce((sum, point)=>sum + Math.abs(point.amount), 0);\n            return {\n                totalUsers,\n                activeUsers,\n                totalMatches,\n                totalPoints,\n                totalRevenue\n            };\n        } catch (error) {\n            throw error;\n        }\n    }\n    // 최근 활동 메서드\n    async getRecentActivities(limit = 10) {\n        try {\n            const [users, matches, points] = await Promise.all([\n                this.getUsers(),\n                this.getMatchingHistory(),\n                this.getPointHistory()\n            ]);\n            const activities = [];\n            // 최근 가입한 사용자들\n            const recentUsers = users.sort((a, b)=>new Date(b.created_at).getTime() - new Date(a.created_at).getTime()).slice(0, 3);\n            recentUsers.forEach((user)=>{\n                activities.push({\n                    id: user.user_id,\n                    type: \"user_signup\",\n                    description: `새로운 사용자가 가입했습니다: ${user.email}`,\n                    timestamp: user.created_at,\n                    user: user.email\n                });\n            });\n            // 최근 매칭 활동\n            const recentMatches = matches.sort((a, b)=>new Date(b.created_at).getTime() - new Date(a.created_at).getTime()).slice(0, 3);\n            recentMatches.forEach((match)=>{\n                activities.push({\n                    id: match.id,\n                    type: \"matching\",\n                    description: `새로운 매칭이 생성되었습니다: ${match.user1_id} ↔ ${match.user2_id}`,\n                    timestamp: match.created_at,\n                    user: `${match.user1_id}, ${match.user2_id}`\n                });\n            });\n            // 최근 포인트 거래\n            const recentPoints = points.sort((a, b)=>new Date(b.created_at).getTime() - new Date(a.created_at).getTime()).slice(0, 3);\n            recentPoints.forEach((point)=>{\n                activities.push({\n                    id: point.id,\n                    type: \"point_transaction\",\n                    description: `포인트 거래: ${point.amount > 0 ? \"+\" : \"\"}${point.amount}P (${point.type})`,\n                    timestamp: point.created_at,\n                    user: point.user_id\n                });\n            });\n            // 모든 활동을 시간순으로 정렬하고 최근 limit개만 반환\n            return activities.sort((a, b)=>new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()).slice(0, limit);\n        } catch (error) {\n            throw error;\n        }\n    }\n    // users + scores + profiles 병합 반환\n    async getUsersWithScoreAndProfile() {\n        const users = await this.getUsers();\n        // Scores, Profiles 모두 Scan\n        const scoresResult = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand({\n            TableName: \"Scores\"\n        }));\n        const profilesResult = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.ScanCommand({\n            TableName: \"Profiles\"\n        }));\n        const scores = scoresResult.Items || [];\n        const profiles = profilesResult.Items || [];\n        // 병합\n        return users.map((user)=>({\n                ...user,\n                score: scores.find((s)=>s.user_id === user.user_id) || null,\n                profile: profiles.find((p)=>p.user_id === user.user_id) || null\n            }));\n    }\n    // 여러 user_id로 Users + Profiles 정보 한 번에 조회\n    async getUsersWithProfilesByIds(userIds) {\n        if (!userIds.length) return [];\n        // DynamoDB batchGet은 100개까지 지원\n        const batches = [];\n        for(let i = 0; i < userIds.length; i += 100){\n            batches.push(userIds.slice(i, i + 100));\n        }\n        const results = [];\n        for (const batch of batches){\n            const params = {\n                RequestItems: {\n                    Users: {\n                        Keys: batch.map((id)=>({\n                                user_id: id\n                            }))\n                    },\n                    Profiles: {\n                        Keys: batch.map((id)=>({\n                                user_id: id\n                            }))\n                    }\n                }\n            };\n            const res = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.BatchGetCommand(params));\n            const users = res.Responses?.Users || [];\n            const profiles = res.Responses?.Profiles || [];\n            const profileMap = Object.fromEntries(profiles.map((p)=>[\n                    p.user_id,\n                    p\n                ]));\n            // 각 유저별로 preferences도 가져와서 병합\n            for (const u of users){\n                let preferences = null;\n                try {\n                    preferences = await this.getPreferences(u.user_id);\n                } catch (e) {\n                    preferences = null;\n                }\n                results.push({\n                    ...u,\n                    profile: profileMap[u.user_id],\n                    preferences\n                });\n            }\n        }\n        return results;\n    }\n}\nconst dataService = new DataService();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dataService);\n// Scores 테이블 연동 함수\nasync function saveUserScore(userId, score, scorer, summary = \"\") {\n    const now = new Date().toISOString();\n    // 기존 점수 row 모두 삭제 (user_id로 Query)\n    const existing = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.QueryCommand({\n        TableName: \"Scores\",\n        KeyConditionExpression: \"user_id = :uid\",\n        ExpressionAttributeValues: {\n            \":uid\": userId\n        }\n    }));\n    for (const item of existing.Items || []){\n        await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.DeleteCommand({\n            TableName: \"Scores\",\n            Key: {\n                user_id: item.user_id,\n                created_at: item.created_at\n            }\n        }));\n    }\n    // Scores 테이블: user_id + created_at(=now)로 저장\n    const average = score.appearance * 0.25 + score.personality * 0.25 + score.job * 0.2 + score.education * 0.15 + score.economics * 0.15;\n    function getGrade(score) {\n        if (score >= 95) return \"S\";\n        if (score >= 85) return \"A\";\n        if (score >= 75) return \"B\";\n        if (score >= 65) return \"C\";\n        if (score >= 55) return \"D\";\n        if (score >= 45) return \"E\";\n        return \"F\";\n    }\n    const averageGrade = getGrade(average);\n    const item = {\n        user_id: userId,\n        created_at: now,\n        scorer,\n        ...score,\n        average,\n        grade: averageGrade,\n        updated_at: now\n    };\n    await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.PutCommand({\n        TableName: \"Scores\",\n        Item: item\n    }));\n    // Users 테이블에 has_score: true 업데이트\n    await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.UpdateCommand({\n        TableName: \"Users\",\n        Key: {\n            user_id: userId\n        },\n        UpdateExpression: \"SET has_score = :true, updated_at = :updatedAt\",\n        ExpressionAttributeValues: {\n            \":true\": true,\n            \":updatedAt\": now\n        }\n    }));\n    // 점수 저장 전 평균/등급 계산\n    // ScoreHistory 테이블에 이력 저장 (평탄화 구조)\n    await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.PutCommand({\n        TableName: \"ScoreHistory\",\n        Item: {\n            user_id: userId,\n            created_at: now,\n            face_score: score.faceScore,\n            appearance: score.appearance,\n            personality: score.personality,\n            job: score.job,\n            education: score.education,\n            economics: score.economics,\n            average,\n            averageGrade,\n            reason: summary,\n            manager_id: scorer\n        }\n    }));\n    // UserStatusHistory에는 점수 이력 저장하지 않음\n    return item;\n}\nasync function getUserScoreHistory(userId) {\n    const params = {\n        TableName: \"UserStatusHistory\",\n        KeyConditionExpression: \"user_id = :uid\",\n        ExpressionAttributeValues: {\n            \":uid\": userId\n        },\n        ScanIndexForward: false\n    };\n    const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.QueryCommand(params));\n    // type이 'score'인 이력만 반환\n    return (result.Items || []).filter((item)=>item.type === \"score\");\n}\nasync function deleteAllScoreHistory(userId) {\n    // 해당 user_id의 모든 ScoreHistory row 삭제\n    const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.QueryCommand({\n        TableName: \"ScoreHistory\",\n        KeyConditionExpression: \"user_id = :uid\",\n        ExpressionAttributeValues: {\n            \":uid\": userId\n        }\n    }));\n    for (const item of result.Items || []){\n        await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.DeleteCommand({\n            TableName: \"ScoreHistory\",\n            Key: {\n                user_id: item.user_id,\n                created_at: item.created_at\n            }\n        }));\n    }\n}\nasync function getUserScore(userId) {\n    const params = {\n        TableName: \"Scores\",\n        KeyConditionExpression: \"user_id = :uid\",\n        ExpressionAttributeValues: {\n            \":uid\": userId\n        },\n        ScanIndexForward: false,\n        Limit: 1\n    };\n    const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.QueryCommand(params));\n    return result.Items?.[0] || null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/lib/dataService.ts\n");

/***/ }),

/***/ "(api)/./src/pages/api/admin/managers/[managerId].ts":
/*!*****************************************************!*\
  !*** ./src/pages/api/admin/managers/[managerId].ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/client-dynamodb */ \"@aws-sdk/client-dynamodb\");\n/* harmony import */ var _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/lib-dynamodb */ \"@aws-sdk/lib-dynamodb\");\n/* harmony import */ var _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _config_aws__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../config/aws */ \"(api)/./src/config/aws.ts\");\n/* harmony import */ var _lib_dataService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../lib/dataService */ \"(api)/./src/lib/dataService.ts\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nconst JWT_SECRET = \"dev_jwt_secret_key_here\"; // login.ts와 동일한 시크릿 키\nfunction getDefaultPermissions(role) {\n    const basePermissions = {\n        user_management: {\n            read: false,\n            write: false,\n            delete: false\n        },\n        matching_management: {\n            read: false,\n            write: false,\n            delete: false\n        },\n        review_management: {\n            read: false,\n            write: false,\n            delete: false\n        },\n        point_management: {\n            read: false,\n            write: false,\n            delete: false\n        },\n        manager_management: {\n            read: false,\n            write: false,\n            delete: false\n        },\n        manager_logs: {\n            read: false,\n            write: false,\n            delete: false\n        },\n        dashboard: {\n            read: false,\n            write: false,\n            delete: false\n        }\n    };\n    switch(role){\n        case \"admin\":\n            return Object.keys(basePermissions).reduce((acc, key)=>{\n                acc[key] = {\n                    read: true,\n                    write: true,\n                    delete: true\n                };\n                return acc;\n            }, {});\n        case \"manager\":\n            return {\n                ...basePermissions,\n                user_management: {\n                    read: true,\n                    write: true,\n                    delete: false\n                },\n                matching_management: {\n                    read: true,\n                    write: true,\n                    delete: false\n                },\n                point_management: {\n                    read: true,\n                    write: true,\n                    delete: false\n                },\n                manager_logs: {\n                    read: false,\n                    write: false,\n                    delete: false\n                },\n                dashboard: {\n                    read: true,\n                    write: false,\n                    delete: false\n                }\n            };\n        case \"support\":\n            return {\n                ...basePermissions,\n                user_management: {\n                    read: true,\n                    write: false,\n                    delete: false\n                },\n                matching_management: {\n                    read: true,\n                    write: false,\n                    delete: false\n                },\n                dashboard: {\n                    read: true,\n                    write: false,\n                    delete: false\n                }\n            };\n        default:\n            return basePermissions;\n    }\n}\n// AWS 설정\nconst client = new _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_0__.DynamoDBClient(_config_aws__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\nconst dynamodb = _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.DynamoDBDocumentClient.from(client);\nasync function handler(req, res) {\n    const { managerId } = req.query;\n    if (!managerId || typeof managerId !== \"string\") {\n        return res.status(400).json({\n            message: \"Manager ID is required\"\n        });\n    }\n    try {\n        // 개발 환경에서는 권한 검증 완화\n        if (true) {\n            console.log(\"\\uD83D\\uDD27 개발 환경: 권한 검증 건너뜀\");\n        } else {}\n        if (req.method === \"GET\") {\n            console.log(`Admin: 매니저 ${managerId} 조회 시작`);\n            const params = {\n                TableName: \"Managers\",\n                Key: {\n                    id: managerId\n                }\n            };\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.GetCommand(params));\n            if (!result.Item) {\n                console.log(`매니저 ${managerId}를 찾을 수 없습니다.`);\n                return res.status(404).json({\n                    message: \"Manager not found\"\n                });\n            }\n            const manager = {\n                id: result.Item.id || \"\",\n                email: result.Item.email || \"\",\n                name: result.Item.name || \"\",\n                role: result.Item.role || \"manager\",\n                status: result.Item.status || \"active\",\n                permissions: result.Item.permissions || getDefaultPermissions(result.Item.role || \"manager\"),\n                created_at: result.Item.createdAt || result.Item.created_at || new Date().toISOString(),\n                updated_at: result.Item.updatedAt || result.Item.updated_at || new Date().toISOString()\n            };\n            console.log(`Admin: 매니저 ${managerId} 조회 완료`);\n            res.status(200).json(manager);\n        } else if (req.method === \"PATCH\") {\n            console.log(`Admin: 매니저 ${managerId} 업데이트 시작`);\n            // 권한 검증 (자신의 이름만 변경하는 경우는 제외)\n            const updateFields = req.body;\n            const isOnlyNameUpdate = Object.keys(updateFields).length === 1 && updateFields.name;\n            if (!isOnlyNameUpdate) {\n                // 개발 환경에서는 권한 검증 완화\n                if (true) {\n                    console.log(\"\\uD83D\\uDD27 개발 환경: 권한 검증 건너뜀\");\n                } else {}\n            } else {\n                console.log(\"\\uD83D\\uDD27 자신의 이름 변경: 권한 검증 건너뜀\");\n            }\n            const updateParams = {\n                TableName: \"Managers\",\n                Key: {\n                    id: managerId\n                },\n                UpdateExpression: \"SET updatedAt = :updated_at\",\n                ExpressionAttributeValues: {\n                    \":updated_at\": new Date().toISOString()\n                },\n                ExpressionAttributeNames: {}\n            };\n            if (updateFields.name) {\n                updateParams.UpdateExpression += \", #name = :name\";\n                updateParams.ExpressionAttributeNames[\"#name\"] = \"name\";\n                updateParams.ExpressionAttributeValues[\":name\"] = updateFields.name;\n            }\n            if (updateFields.email) {\n                updateParams.UpdateExpression += \", email = :email\";\n                updateParams.ExpressionAttributeValues[\":email\"] = updateFields.email;\n            }\n            if (updateFields.role) {\n                updateParams.UpdateExpression += \", role = :role\";\n                updateParams.ExpressionAttributeValues[\":role\"] = updateFields.role;\n            }\n            if (updateFields.permissions) {\n                updateParams.UpdateExpression += \", #perms = :permissions\";\n                updateParams.ExpressionAttributeNames[\"#perms\"] = \"permissions\";\n                updateParams.ExpressionAttributeValues[\":permissions\"] = updateFields.permissions;\n            }\n            await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.UpdateCommand(updateParams));\n            // 업데이트된 데이터 조회\n            const getParams = {\n                TableName: \"Managers\",\n                Key: {\n                    id: managerId\n                }\n            };\n            const result = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.GetCommand(getParams));\n            if (!result.Item) {\n                return res.status(404).json({\n                    message: \"Manager not found\"\n                });\n            }\n            const manager = {\n                id: result.Item.id || \"\",\n                email: result.Item.email || \"\",\n                name: result.Item.name || \"\",\n                role: result.Item.role || \"manager\",\n                status: result.Item.status || \"active\",\n                permissions: result.Item.permissions || getDefaultPermissions(result.Item.role || \"manager\"),\n                created_at: result.Item.createdAt || result.Item.created_at || new Date().toISOString(),\n                updated_at: result.Item.updatedAt || result.Item.updated_at || new Date().toISOString()\n            };\n            console.log(`Admin: 매니저 ${managerId} 업데이트 완료`);\n            res.status(200).json(manager);\n        } else if (req.method === \"DELETE\") {\n            console.log(`Admin: 매니저 ${managerId} 삭제 시작`);\n            // 삭제할 매니저 정보 조회\n            const getParams = {\n                TableName: \"Managers\",\n                Key: {\n                    id: managerId\n                }\n            };\n            const managerResult = await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.GetCommand(getParams));\n            if (!managerResult.Item) {\n                return res.status(404).json({\n                    message: \"Manager not found\"\n                });\n            }\n            const managerToDelete = managerResult.Item;\n            // 매니저 삭제\n            const deleteParams = {\n                TableName: \"Managers\",\n                Key: {\n                    id: managerId\n                }\n            };\n            await dynamodb.send(new _aws_sdk_lib_dynamodb__WEBPACK_IMPORTED_MODULE_1__.DeleteCommand(deleteParams));\n            // 로그 기록\n            try {\n                const authHeader = req.headers.authorization;\n                if (authHeader && authHeader.startsWith(\"Bearer \")) {\n                    const token = authHeader.substring(7);\n                    // 토큰에서 매니저 ID 추출 (실제로는 JWT 디코딩 필요)\n                    const currentManagerId = \"admin\"; // 임시로 admin으로 설정\n                    await _lib_dataService__WEBPACK_IMPORTED_MODULE_3__[\"default\"].logManagerAction(currentManagerId, \"manager_delete\", managerId, `매니저 삭제: ${managerToDelete.name} (${managerToDelete.email})`);\n                }\n            } catch (logError) {\n                console.error(\"로그 기록 실패:\", logError);\n            // 로그 기록 실패해도 삭제는 계속 진행\n            }\n            console.log(`Admin: 매니저 ${managerId} 삭제 완료`);\n            res.status(200).json({\n                message: \"Manager deleted successfully\"\n            });\n        } else {\n            res.status(405).json({\n                message: \"Method not allowed\"\n            });\n        }\n    } catch (error) {\n        console.error(\"Admin: 매니저 관리 오류:\", error);\n        res.status(500).json({\n            message: \"매니저 관리 중 오류가 발생했습니다.\",\n            error: error instanceof Error ? error.message : \"Unknown error\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/admin/managers/[managerId].ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Fmanagers%2F%5BmanagerId%5D&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cadmin%5Cmanagers%5C%5BmanagerId%5D.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();
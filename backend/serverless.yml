service: backend

frameworkVersion: '4'

provider:
  name: aws
  runtime: nodejs18.x
  stage: ""
  region: ap-northeast-2
  httpApi:
    cors: true
  environment:
    S3_BUCKET_NAME: ${env:S3_BUCKET_NAME, 'date-sense'}
    S3_REGION: ${env:S3_REGION, 'ap-northeast-2'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
            - s3:PutObjectAcl
          Resource: 
            - "arn:aws:s3:::${env:S3_BUCKET_NAME, 'date-sense'}/*"

functions:
  hello:
    handler: handler.hello
    events:
      - httpApi:
          path: /hello
          method: get

  signup:
    handler: handler.signup
    events:
      - httpApi:
          path: /signup
          method: post

  confirmSignup:
    handler: handler.confirmSignup
    events:
      - httpApi:
          path: /confirm-signup
          method: post

  resendConfirmationCode:
    handler: handler.resendConfirmationCode
    events:
      - httpApi:
          path: /resend-confirmation-code
          method: post

  login:
    handler: handler.login
    events:
      - httpApi:
          path: /login
          method: post

  getUser:
    handler: handler.getUser
    events:
      - httpApi:
          path: /users/{id}
          method: get
      - httpApi:
          path: /user/{userId}
          method: get

  getUserPreferences:
    handler: handler.getUserPreferences
    events:
      - httpApi:
          path: /user-preferences/{userId}
          method: get

  saveUserPreferences:
    handler: handler.saveUserPreferences
    events:
      - httpApi:
          path: /user-preferences
          method: post

  saveProfile:
    handler: handler.saveProfile
    events:
      - httpApi:
          path: /profile
          method: post

  getProfile:
    handler: handler.getProfile
    events:
      - httpApi:
          path: /profile/{userId}
          method: get

  requestMatching:
    handler: handler.requestMatching
    events:
      - httpApi:
          path: /matching-requests
          method: post

  getMatchingRequests:
    handler: handler.getMatchingRequests
    events:
      - httpApi:
          path: /matching-requests
          method: get

  confirmMatching:
    handler: handler.confirmMatching
    events:
      - httpApi:
          path: /matching-confirm
          method: post

  submitChoices:
    handler: handler.submitChoices
    events:
      - httpApi:
          path: /submit-choices
          method: post

  saveReview:
    handler: handler.saveReview
    events:
      - httpApi:
          path: /reviews
          method: post

  getReviews:
    handler: handler.getReviews
    events:
      - httpApi:
          path: /reviews
          method: get

  chargePoints:
    handler: handler.chargePoints
    events:
      - httpApi:
          path: /points-charge
          method: post

  updateUserStatus:
    handler: handler.updateUserStatus
    events:
      - httpApi:
          path: /user-status/{userId}
          method: put

  getCards:
    handler: handler.getCards
    events:
      - httpApi:
          path: /cards
          method: get

  getMainCard:
    handler: handler.getMainCard
    events:
      - httpApi:
          path: /main-card
          method: get

  getCardDetail:
    handler: handler.getCardDetail
    events:
      - httpApi:
          path: /card-detail/{userId}
          method: get

  getMatchDetail:
    handler: handler.getMatchDetail
    events:
      - httpApi:
          path: /match-detail/{matchId}
          method: get

  uploadImage:
    handler: handler.uploadImage
    events:
      - httpApi:
          path: /upload-image
          method: post

  getUploadUrl:
    handler: handler.getUploadUrl
    events:
      - httpApi:
          path: /get-upload-url
          method: post

  serveFile:
    handler: handler.serveFile
    events:
      - httpApi:
          path: /files/{year}/{month}/{day}/{userId}/{fileName}
          method: get

  migrateImages:
    handler: handler.migrateImages
    events:
      - httpApi:
          path: /migrate-images
          method: post

  cleanupTempFiles:
    handler: handler.cleanupTempFiles
    events:
      - httpApi:
          path: /cleanup-files
          method: post

  getTerms:
    handler: handler.getTerms
    events:
      - httpApi:
          path: /terms
          method: get

  getPrivacy:
    handler: handler.getPrivacy
    events:
      - httpApi:
          path: /privacy
          method: get

  getCustomerService:
    handler: handler.getCustomerService
    events:
      - httpApi:
          path: /customer-service
          method: get

  getMatchingStatus:
    handler: handler.getMatchingStatus
    events:
      - httpApi:
          path: matching-status
          method: get

  getInsight:
    handler: handler.getInsight
    events:
      - httpApi:
          path: /insight/{userId}
          method: get

  getHistory:
    handler: handler.getHistory
    events:
      - httpApi:
          path: /history/{userId}
          method: get

  getReward:
    handler: handler.getReward
    events:
      - httpApi:
          path: /reward/{userId}
          method: get

  respondToProposal:
    handler: handler.respondToProposal
    events:
      - httpApi:
          path: /matching-requests/{matchId}/respond
          method: post

  respondToProposalByProposeId:
    handler: handler.respondToProposalByProposeId
    events:
      - httpApi:
          path: /propose/{proposeId}/respond
          method: post

  processMatchingStatus:
    handler: handler.processMatchingStatus
    events:
      - httpApi:
          path: /process-matching-status
          method: post
      - schedule:
          rate: rate(1 hour)
          enabled: true

  finalizeMatching:
    handler: handler.finalizeMatching
    events:
      - httpApi:
          path: /finalize-matching
          method: post

  shareContact:
    handler: handler.shareContact
    events:
      - httpApi:
          path: /share-contact
          method: post

  saveReviewContact:
    handler: handler.saveReviewContact
    events:
      - httpApi:
          path: /reviews/contact
          method: post

  getContactDetail:
    handler: handler.getContactDetail
    events:
      - httpApi:
          path: /contact-detail
          method: get

  finishMeeting:
    handler: handler.finishMeeting
    events:
      - httpApi:
          path: /meeting/finish
          method: post

  cleanupFinishedRequests:
    handler: handler.cleanupFinishedRequests
    events:
      - httpApi:
          path: /cleanup-finished-requests
          method: post
      - schedule:
          rate: rate(1 day)
          enabled: true

  getHistoryDetail:
    handler: handler.getHistoryDetail
    events:
      - httpApi:
          path: /history/detail/{matchPairId}
          method: get

  migrateToDynamoDB:
    handler: handler.migrateToDynamoDB
    events:
      - httpApi:
          path: /migrate-to-dynamodb
          method: post

  createDynamoDBTables:
    handler: handler.createDynamoDBTables
    events:
      - httpApi:
          path: /create-dynamodb-tables
          method: post

plugins:
  - serverless-offline 